express:
	☐ make routes case-sensitive
	☐ server.use doesn't really work, because of when we run it
		I couldn't find an easy solution for this, as even running them right before routes is in app.loader.then, which makes it after the error-handling middleware...
changes:
	☐ experiment with making cornerstone a global npm module
		✔ init @done (14-01-25 22:02)
		☐ db-to-model
		☐ model-to-db
	☐ consider using or wrapping es6 promises
fixes:
	☐ make {{extend}} work with req.redirect()
enhancements:
	☐ make models defined in such a way that they can benefit from inheritance
		for example {ED, GC, IP} should be able to inherit from User
	☐? possibly controllers as well ^^^^^
	☐ nib for stylus baked in
	☐ parse external js files
		could be from private/js -> public/js, just like stylus
	prod:
		☐ concat/minify scripts and styles
		☐ compress images
		☐ cache busters
			likely option-based:  git sha1s, timestamps, none
features:
	☐ allow for middleware
	☐ websockets
		☐ API access
		☐ streamed log
	☐ dynamic layout (or lack thereof) based on !!req.xhr
	✔ arbitrary config items @done (14-01-25 22:02)
	database:
		☐ make an app.db function that lets you select specified columns
			db.find(["id", "first_name"], "id = 2", "user");
			User.find(["id", "first_name"], "id = 2");
		☐ chainable query-builder
			(I know Sean doesn't like this but I do, even if it's more verbose)
			db.select("id").from("user");
			db
				.select("user.first_name", "cart.id")
				.from("user", "cart")
				.where("user.id < cart.id");
☐ future
	☐ database adapters
	☐ put thought into how using types could help us (or make us more safe -_-)
☐ document rewrite and redirect



MODELS what I want
	- models can made of any query, or a model file
	- a model can be defined with a database table without making a whole file for it
	- any model should have
		- get() to get all
		- get(5) to get id
		- get(5,10) to get range
		- get("where") to get with where clause
	- model files are where you can define hasOne or hasMany relationships
		- this would let the get calls get more data
	- models can be set to get, and cached globally so other users don't have to get that data again
		- should have a expire time set so that refreshes
	- models should have an adapter so that they don't have to use mysql
	- models should be able to be expanded with new data and be able to deep copied into when needed